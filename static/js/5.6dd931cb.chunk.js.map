{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/PhoneBook/PhoneBook.module.css","components/Filter/Filter.module.css","components/Modal/Modal.module.css","App.module.css","components/Section/Section.js","../node_modules/@material-ui/icons/esm/Add.js","../node_modules/@material-ui/core/esm/Fab/Fab.js","components/Form/Form.js","../node_modules/@material-ui/icons/esm/Delete.js","components/PhoneBook/PhoneBook.js","components/Filter/Filter.js","components/Modal/Modal.js","components/ContactsView/ContactsView.js"],"names":["module","exports","Section","title","children","className","styles","section","createSvgIcon","React","d","Fab","props","ref","classes","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","concat","capitalize","extended","primary","secondary","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","boxShadow","shadows","palette","getContrastText","grey","backgroundColor","A100","action","disabledBackground","textDecoration","display","alignItems","justifyContent","contrastText","main","dark","sizeSmall","sizeMedium","name","useStyles","makeStyles","margin","spacing","extendedIcon","marginRight","Form","onShowModal","useState","setName","number","setNumber","contacts","useSelector","contactSelectors","getContacts","dispatch","useDispatch","handleChange","e","target","value","reset","form","onSubmit","preventDefault","some","contact","contactOperations","addContact","type","placeholder","input","pattern","required","onChange","addedBlock","added","Add","fontSize","fontWeight","border","outline","cursor","textTransform","PhoneBook","isLoading","getIsLoading","filteredContacts","useEffect","fetchContacts","length","list","map","id","item","Button","startIcon","Delete","onClick","contactId","deleteContact","Filter","getValue","search","contactActions","changeFilter","modalRoot","document","querySelector","Modal","onClose","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","backdrop","currentTarget","content","ContactsView","showModal","setShowModal","toggleModal","modalButton"],"mappings":"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","file":"static/js/5.6dd931cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2rFX_\",\"title\":\"Section_title__39DbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3YP5O\",\"name\":\"Form_name__rV-5Q\",\"input\":\"Form_input__1G320\",\"addedBlock\":\"Form_addedBlock__3SeTL\",\"added\":\"Form_added__3T7fA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneBook_list__1fn1R\",\"item\":\"PhoneBook_item__1Xzqp\",\"number\":\"PhoneBook_number__26Z-4\",\"button\":\"PhoneBook_button__fRnHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Filter_search__2iQvb\",\"title\":\"Filter_title__2RfQu\",\"input\":\"Filter_input__3AKmm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2yePm\",\"content\":\"Modal_content__3xKLD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalButton\":\"App_modalButton__1Sq_g\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (  \r\n  <div className={styles.section}>\r\n    <span className={styles.title}>{title}</span>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section;","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\nvar Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'large' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, size !== 'large' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, variant === 'extended' && classes.extended, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   * 'round' is deprecated, use 'circular' instead.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['extended', 'circular', 'round']), function (props) {\n    if (props.variant === 'round') {\n      throw new Error('Material-UI: variant=\"round\" was renamed variant=\"circular\" for consistency.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactOperations, contactSelectors } from 'redux/contacts';\r\nimport { Add } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport styles from './Form.module.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  button: {\r\n    margin: 0,\r\n    width: \"36px\",\r\n    height: \"36px\",\r\n    color: \"#ffe4c4\",\r\n    backgroundColor: \"rgb(216, 100, 100)\",\r\n    boxShadow: \"inset 0px 0px 6px 2px grey\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(240, 100, 100)\",\r\n      boxShadow: \"inset 0px 0px 6px 2px grey\",\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nfunction Form({onShowModal}) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(contactSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n       onShowModal(name);\r\n      reset();\r\n      return;\r\n      }\r\n    dispatch(contactOperations.addContact({name, number}));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label>\r\n        <p className={styles.name}>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          className={styles.input}\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        </label>\r\n        <label>\r\n          <p className={styles.name}>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter number\"\r\n            value={number}\r\n            className={styles.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n      </label>\r\n      <div className={styles.addedBlock}>\r\n        <p className={styles.added}>Add contact</p>\r\n        <div className={classes.root}>\r\n          <Fab className={classes.button} type=\"submit\" aria-label=\"add\">\r\n            <Add/>\r\n          </Fab>\r\n        </div>\r\n      </div>\r\n      {/* <button className={styles.button} type=\"submit\">Add contact</button> */}\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactSelectors, contactOperations } from 'redux/contacts';\r\nimport { Button } from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from './PhoneBook.module.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  button: {\r\n    padding: \"0 7px 0 7px\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: 600,\r\n    backgroundColor: \"rgb(216, 100, 100)\",\r\n    color: \"bisque\",\r\n    borderRadius: \"3px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    boxShadow: \"inset 0px 0px 6px 2px grey\",\r\n    cursor: \"pointer\",\r\n    textTransform: \"capitalize\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(240, 100, 100)\",\r\n      boxShadow: \"inset 0px 0px 6px 2px grey\",\r\n    },\r\n  }\r\n}));\r\n\r\nconst PhoneBook = () => {\r\n\r\n  const isLoading = useSelector(contactSelectors.getIsLoading);\r\n  const contacts = useSelector(contactSelectors.filteredContacts);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const onDeleteContact = contactId => {\r\n    dispatch(contactOperations.deleteContact(contactId))\r\n  };\r\n\r\n  useEffect(() => dispatch(contactOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <>\r\n    {isLoading && <h2>Loading...</h2>}\r\n    {contacts.length > 0 && (\r\n      <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.item} key={id}>\r\n          <span>{name}:</span> <span className={styles.number}>{number}</span>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            startIcon={<Delete />}\r\n            onClick={() => { onDeleteContact(id) }}\r\n        >\r\n        Delete\r\n        </Button>\r\n          {/* <button className={styles.button} onClick={() => { onDeleteContact(id) }}>Delete</button> */}\r\n        </li>\r\n      ))}\r\n        </ul>\r\n    )}\r\n    </>\r\n    )\r\n};\r\n\r\nexport default PhoneBook;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactSelectors, contactActions } from 'redux/contacts';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(contactSelectors.getValue);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(contactActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={styles.search}>\r\n      <span className={styles.title}>\r\n        Find contacts by name\r\n      </span>\r\n      <input className={styles.input} type=\"text\" value={value} placeholder=\"Search\" onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\n\r\nexport default Filter;","import { useEffect } from 'react';\r\nimport {createPortal} from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({onClose, children}) {\r\n\r\n  const handleKeyDown = e => {\r\n       if (e.code === 'Escape') {\r\n         onClose();\r\n       }\r\n   }\r\n   \r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  \r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n   return createPortal(\r\n      <div className={styles.backdrop} onClick={handleBackdropClick}>\r\n        <div className={styles.content}>{children}</div>\r\n      </div>, modalRoot\r\n    );\r\n  }","import { useState } from 'react';\r\nimport Section from '../Section';\r\nimport Form from '../Form';\r\nimport PhoneBook from '../PhoneBook';\r\nimport Filter from '../Filter';\r\nimport Modal from '../Modal';\r\nimport styles from 'App.module.css';\r\n\r\nexport default function ContactsView() {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {showModal && <Modal onClose={toggleModal}>\r\n          <h1>Hello!</h1>\r\n          <p>This name already in contacts. Rewrite number?</p>\r\n          <button className={styles.modalButton} type=\"button\" onClick={toggleModal}>Close</button>\r\n        </Modal>}\r\n        <Section title=\"Phonebook\">\r\n        <Form onShowModal={toggleModal}/>\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          <PhoneBook />\r\n        </Section>\r\n  </>\r\n  )\r\n}"],"sourceRoot":""}