{"version":3,"sources":["components/authViews/RegisterView.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","margin","spacing","width","name","marginTop","marginBottom","fontSize","fontWeight","input","padding","borderRadius","border","outline","backgroundColor","boxShadow","button","color","cursor","textTransform","RegisterView","useState","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","value","classes","className","onSubmit","preventDefault","authOperations","register","variant","type","autoFocus","label","onChange"],"mappings":"qQAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACf,QAAS,CACPC,OAAQJ,EAAMK,QAAQ,GACtBC,MAAO,SAGXC,KAAM,CACNC,UAAW,EACXC,aAAc,MACdC,SAAU,OACVC,WAAY,KAEZC,MAAO,CACLH,aAAc,OACdI,QAAS,MACTP,MAAO,QACPQ,aAAc,MACdC,OAAQ,OACRC,QAAS,OACTC,gBAAiB,OACjBC,UAAW,gCAEbC,OAAQ,CACNb,MAAO,QACPO,QAAS,MACTH,SAAU,SACVC,WAAY,IACZM,gBAAiB,qBACjBG,MAAO,SACPN,aAAc,MACdC,OAAQ,OACRC,QAAS,OACTE,UAAW,6BACXG,OAAQ,UACRC,cAAe,aACf,UAAW,CACTL,gBAAiB,qBACjBC,UAAW,mCAKF,SAASK,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlB3B,EAAR,EAAQA,KAAM4B,EAAd,EAAcA,MACd,OAAQ5B,GACN,IAAK,OACH,OAAOkB,EAAQU,GACjB,IAAK,QACH,OAAOR,EAASQ,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,SAgBAC,EAAUtC,IAEhB,OACE,qCACA,8CACA,uBAAMuC,UAAWD,EAAQnC,KAAMqC,SAXZ,SAAAL,GACnBA,EAAEM,iBACFT,EAASU,IAAeC,SAAS,CAAElC,OAAMmB,QAAOE,cAPhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAcZ,UACE,mBAAGQ,UAAWD,EAAQ7B,KAAtB,kBACA,cAAC,IAAD,CACEmC,QAAQ,WACRC,KAAK,OACLpC,KAAK,OACL4B,MAAO5B,EACPqC,WAAS,EACTC,MAAM,kBACNR,UAAWD,EAAQxB,MACnBkC,SAAUd,IAEZ,mBAAGK,UAAWD,EAAQ7B,KAAtB,mBACA,cAAC,IAAD,CACEmC,QAAQ,WACRC,KAAK,QACLpC,KAAK,QACL4B,MAAOT,EACPmB,MAAM,mBACNR,UAAWD,EAAQxB,MACnBkC,SAAUd,IAEZ,mBAAGK,UAAWD,EAAQ7B,KAAtB,sBACA,cAAC,IAAD,CACEmC,QAAQ,WACRC,KAAK,WACLpC,KAAK,WACL4B,MAAOP,EACPiB,MAAM,sBACNR,UAAWD,EAAQxB,MACnBkC,SAAUd,IAEZ,cAAC,IAAD,CACIU,QAAQ,YACRL,UAAWD,EAAQjB,OACnBwB,KAAK,SAHT","file":"static/js/8.ab4a3340.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  name: {\r\n  marginTop: 0,\r\n  marginBottom: \"5px\",\r\n  fontSize: \"25px\",\r\n  fontWeight: 500,\r\n},\r\n  input: {\r\n    marginBottom: \"10px\",\r\n    padding: \"3px\",\r\n    width: \"300px\",\r\n    borderRadius: \"4px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: \"inset -1px 0px 10px 2px grey\",\r\n  },\r\n  button: {\r\n    width: \"130px\",\r\n    padding: \"3px\",\r\n    fontSize: \"1.4rem\",\r\n    fontWeight: 500,\r\n    backgroundColor: \"rgb(216, 100, 100)\",\r\n    color: \"bisque\",\r\n    borderRadius: \"3px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    boxShadow: \"inset 0px 0px 6px 2px grey\",\r\n    cursor: \"pointer\",\r\n    textTransform: \"capitalize\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(240, 100, 100)\",\r\n      boxShadow: \"inset 0px 0px 6px 2px grey\",\r\n    },\r\n  }\r\n}));\r\n\r\nexport default function RegisterView() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    reset();\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n    <h1>Registration</h1>\r\n    <form className={classes.root} onSubmit={handleSubmit}>\r\n      <p className={classes.name}>Name</p>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        autoFocus\r\n        label=\"Enter your name\"\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n      />\r\n      <p className={classes.name}>Email</p>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        label=\"Enter your email\"\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n      />\r\n      <p className={classes.name}>Password</p>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        label=\"Enter your password\"\r\n        className={classes.input}\r\n        onChange={handleChange}\r\n      />\r\n      <Button\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          type=\"submit\">\r\n          Register\r\n      </Button>\r\n    </form>\r\n    </>\r\n  )\r\n}"],"sourceRoot":""}