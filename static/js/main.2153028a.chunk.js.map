{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","components/Container/Container.js","components/AppBar/Navigation.js","components/UserMenu/panda.jpg","components/UserMenu/UserMenu.js","components/AppBar/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","components/AppBar/AppBar.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contact-actions.js","services/contact-api.js","redux/contacts/contact-operations.js","redux/contacts/contact-selectors.js","redux/contacts/contact-reducer.js","components/Container/Container.module.css"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","message","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","alert","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getIsRefreshing","isRefreshing","getUsername","user","name","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","Container","children","className","styles","container","Navigation","useSelector","to","exact","link","activeClassName","activeLink","UserMenu","dispatch","useDispatch","avatar","defaultAvatar","src","alt","width","button","type","onClick","AuthNav","AppBar","header","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","useStyles","makeStyles","theme","root","marginTop","spacing","HomePage","lazy","RegisterView","LoginForm","ContactsView","App","classes","useEffect","fallback","LinearProgress","path","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","authReducer","contact","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports","changeFilter","createAction","fetchContacts","addContacts","number","deleteContact","contactId","delete","contactAPI","contacts","addContact","getValue","filter","getContacts","getIsLoading","isLoading","filteredContacts","createSelector","normalizedSearch","toLowerCase","includes","createReducer","id","contactActions","error","combineReducers"],"mappings":"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","file":"static/js/main.2153028a.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n});\r\n\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      console.log('No token');\r\n      alert('Please login or register!');\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n    return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getIsRefreshing = state => state.auth.isRefreshing;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getIsRefreshing,\r\n  getUsername,\r\n};\r\nexport default authSelectors;","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isRefreshing: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      console.log(action);\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isRefreshing = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isRefreshing = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isRefreshing = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) =>\r\n  <div className={styles.container}>{children}\r\n  </div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './AppBar.module.css';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return(\r\n  <nav>\r\n    <NavLink to=\"/\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n  {isLoggedIn && (\r\n    <NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Phonebook\r\n    </NavLink>\r\n)}\r\n    \r\n  </nav>\r\n);\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/panda.1fbf15f5.jpg\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from 'redux/auth';\r\nimport styles from './UserMenu.module.css';\r\nimport defaultAvatar from './panda.jpg';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.user}>\r\n      <img src={avatar} alt=\"avatar\" width=\"32\" className={styles.avatar} />\r\n        <span className={styles.name}>Welcome, {name}.</span>\r\n      </div>\r\n      <button className={styles.button} type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}","import { NavLink } from 'react-router-dom';\r\nimport styles from './AppBar.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from 'redux/auth';\r\nimport styles from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { authSelectors } from \"redux/auth\";\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return <Route {...routeProps}>\r\n    {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n  </Route>\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { authSelectors } from \"redux/auth\";\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  redirectTo = '/contacts',\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return <Route {...routeProps}>\r\n    {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n  </Route>\r\n}","import { useEffect, Suspense, lazy } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport Container from './components/Container';\r\nimport AppBar from './components/AppBar';\r\nimport { authOperations, authSelectors } from 'redux/auth';\r\nimport PrivateRoute from 'components/PrivateRoute';\r\nimport PublicRoute from 'components/PublicRoute';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst HomePage = lazy(() => import ('./components/HomePage'));\r\nconst RegisterView = lazy(() => import ('components/authViews/RegisterView'));\r\nconst LoginForm = lazy(() => import ('./components/authViews/LoginView'));\r\nconst ContactsView = lazy(() => import ('./components/ContactsView'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isRefreshing = useSelector(authSelectors.getIsRefreshing);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      {isRefreshing ? (\r\n        <h1>Preparing information.</h1>\r\n      ) : (\r\n          <>\r\n          <AppBar />\r\n          <Switch>\r\n            <Suspense fallback={\r\n              <div className={classes.root}>\r\n                <LinearProgress />\r\n              </div>\r\n              }>\r\n              {/* <Route exact path=\"/\" component={HomePage} /> */}\r\n              {/* <Route path=\"/register\" component={RegisterView} /> */}\r\n              {/* <Route path=\"/login\" component={LoginForm} /> */}\r\n              {/* <Route path=\"/contacts\" component={ContactsView} /> */}\r\n\r\n              <PublicRoute exact path=\"/\">\r\n                <HomePage />\r\n              </PublicRoute>\r\n              <PublicRoute path=\"/register\" restricted redirectTo = \"/\">\r\n                <RegisterView />\r\n              </PublicRoute>\r\n              <PublicRoute path=\"/login\" restricted>\r\n                <LoginForm />\r\n              </PublicRoute>\r\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n                <ContactsView />\r\n              </PrivateRoute>\r\n            </Suspense>\r\n          </Switch>\r\n            </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contact: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {store, persistor} from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2nadd\",\"link\":\"AppBar_link__2U6Ef\",\"activeLink\":\"AppBar_activeLink__3WRGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3_FyL\",\"user\":\"UserMenu_user__3pLgB\",\"avatar\":\"UserMenu_avatar__3KCfE\",\"name\":\"UserMenu_name__1OsI3\",\"button\":\"UserMenu_button__1__0T\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n// export const fetchContactsRequest = createAction('contact/fetchContactsRequest');\r\n// export const fetchContactsSuccess = createAction('contact/fetchContactsSuccess');\r\n// export const fetchContactsError = createAction('contact/fetchContactsError');\r\n\r\n// export const addContactsRequest = createAction('contact/addContactsRequest');\r\n// export const addContactsSuccess = createAction('contact/addContactsSuccess');\r\n// export const addContactsError = createAction('contact/addContactsError');\r\n\r\n// export const deleteContactsRequest = createAction('contact/deleteContactsRequest');\r\n// export const deleteContactsSuccess = createAction('contact/deleteContactsSuccess');\r\n// export const deleteContactsError = createAction('contact/deleteContactsError');","import axios from 'axios';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContacts({ name, number }) {\r\n  const contact = { name, number };\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(contactId) {\r\n  return await axios.delete(`/contacts/${contactId}`);\r\n}","import * as contactAPI from 'services/contact-api';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contact/fetchContacts',\r\n  async () => {\r\n    const contacts = await contactAPI.fetchContacts();\r\n    return contacts;\r\n  }\r\n)\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contact/addContact',\r\n  async (data) => {\r\n    const contacts = await contactAPI.addContacts(data);\r\n    return contacts;\r\n  }\r\n)\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contact/deleteContact',\r\n  async (contactId) => {\r\n    await contactAPI.deleteContact(contactId);\r\n    return contactId;\r\n  }\r\n)","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getValue = state => state.contact.filter;\r\nexport const getContacts = state => state.contact.contacts;\r\nexport const getIsLoading = state => state.contact.isLoading;\r\n\r\nexport const filteredContacts = createSelector(\r\n  [getContacts, getValue],\r\n  (contacts, filter) => {\r\n    const normalizedSearch = filter.toLowerCase();\r\n\r\n    return contacts.filter(({name}) =>\r\n      name.toLowerCase().includes(normalizedSearch));\r\n  },\r\n);\r\n\r\n// export const filteredContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getValue(state);\r\n//   const normalizedSearch = filter.toLowerCase();\r\n\r\n//   return contacts.filter(({name}) =>\r\n//     name.toLowerCase().includes(normalizedSearch));\r\n// }\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport * as contactActions from './contact-actions';\r\nimport { fetchContacts, addContact, deleteContact } from './contact-operations';\r\n\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, {payload}) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => {\r\n      return [payload, ...state];\r\n  },\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [contactActions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Dwjn\"};"],"sourceRoot":""}